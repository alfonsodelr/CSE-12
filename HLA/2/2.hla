program StringProgram;

#include( "stdlib.hhf" ); 
// The file cs17string.hla is downloadable from the hyperlink shown above.
// Place it in the same folder as this hla file you are working on

#include( "cs17string.hla" );

static 
stringData : dword;
answer : int32;

// TODO: CS 17 Students add code below to implement this function
// Several hints are supplied

procedure hasTwozs( stringData : dword ); @nodisplay; @noframe;
static
dReturnAddress : dword;
dEBX : dword;
dECX : dword;
dEDX : dword;
counter : int8 := 0;
begin hasTwozs;

mov(EBX, dEBX);
mov(ECX, dECX);
mov(EDX, dEDX);

// TODO: CS 17 Students will need to preserve registers
pop( dReturnAddress );
pop(EBX); //stringData
push( dReturnAddress );

mov( 0, DX ); //loop

putsRepeatLoop:
cmp( [ EBX ], DH );
je putsEndLoop;
//
mov(122, CH);
cmp([EBX], CH);
je hasZ;
//continue
jmp after;
hasZ:
inc(counter);
after:
//
inc( EBX );
jmp putsRepeatLoop;
putsEndLoop:

mov(counter, BH);
cmp(BH, 2);
je success;
mov(0,EAX);
jmp finished;
success:
mov(1, EAX);

finished:

ret();

end hasTwozs;

begin StringProgram; 

stdout.put( "Please enter a string to process", nl );

// this code allocates a string of size 80

mov( @size( int8 ), AL );
mov( 80, BL );
inc( BL );
mul( BL );
mov( 0, EBX );
mov( AX, BX );
malloc( EBX );
mov( EAX, stringData );

// let's try reading a value into the string
mov( stringData, EAX );
push( EAX );
mov( 80, CX );
push( CX );

call gets;

// print the string

stdout.put( "----> here is the string you entered: " );

mov( stringData, EAX );
push( EAX );
call puts;

stdout.newln();

// initialize EAX before calling the function.

mov( 0, EAX );


// TODO: send a string parameter to the function
mov(stringData, EAX);
push(EAX);
call hasTwozs;
mov( EAX, answer );


// show the results
stdout.put( "after hasTwozs --- result=" );
stdout.put( answer );
stdout.newln();

end StringProgram;