program Part2;
#include("stdlib.hhf");

static
a : int8 := 0;
b : int8 := 0;
c : int8 := 0;
d : int8 := 0;

procedure largest(value1 : int8; value2 : int8; value3 : int8; value4 : int8); @nodisplay; @noframe;

static
iReturnAddress : dword;
iRegisterValue : dword;
iTemporary : int16;
iGreatest : int8;
iGreatest_ab : int8;
iGreatest_cd : int8;

begin largest;

mov(EBX, iRegisterValue);
pop(iReturnAddress);
    
pop(iTemporary); 
mov(iTemporary, BX);
mov(BL, value4); //d

pop(iTemporary); 
mov(iTemporary, BX);
mov(BL, value3); //c

pop(iTemporary); 
mov(iTemporary, BX);
mov(BL, value2); //b

pop(iTemporary); 
mov(iTemporary, BX);
mov(BL, value1); //a

push(iReturnAddress);
push(iRegisterValue);

///////////////////////////////////////////////////////

first_i: // check: a < b

mov(value2, AH);
cmp(value1, AH);
jg first_greater;

mov(AH, iGreatest_ab);
jmp second_i;

first_greater:
mov(value1, AH);
mov(AH, iGreatest_ab);
jmp second_i;

second_i: // check: c < d

mov(value4, AH);
cmp(value3, AH);
jg second_greater;

mov(AH, iGreatest_cd);
jmp third_i;

second_greater:
mov(value3, AH);
mov(AH, iGreatest_cd);
jmp third_i;

third_i: // check a/b < c/d

mov(iGreatest_cd, AH);
cmp(iGreatest_ab, AH);
jg third_greater;

mov(AH, iGreatest);
jmp finished;

third_greater:
mov(iGreatest_ab, AH);
mov(AH, iGreatest);
jmp finished; 

finished:
mov(iGreatest, AH);

pop(EBX);
ret();
end largest;

/////////////////////////////////////////////////////////////////

begin Part2;

stdout.put("put number here: ");
stdin.get(a);
stdout.put("put number here: ");
stdin.get(b);
stdout.put("put number here: ");
stdin.get(c);
stdout.put("put number here: ");
stdin.get(d);

mov(0, BX);
mov(a, BL);
push(BX);
mov(0, BX);
mov(b, BL);
push(BX);
mov(0, BX);
mov(c, BL);
push(BX);
mov(0, BX);
mov(d, BL);
push(BX);

call largest;

stdout.put("largest( ");
stdout.put(a);
stdout.put(", ");
stdout.put(b);
stdout.put(", ");
stdout.put(c);
stdout.put(", ");
stdout.put(d);
stdout.put(" ) equals ");
stdout.puti8(AH);
stdout.put("!");

stdout.newln();

end Part2;

